---
import Idlers from "@/components/pixel-vpet/idlers.astro"
import { Image } from 'astro:assets';
const imageImports = import.meta.glob('@/assets/images/pixel-vpet/carousel/*.png', { eager: true });

const images = Object.values(imageImports).map((img) => img.default);
---

<section class="flex flex-col items-center mx-4 text-center py-16">
  <div class="relative">
    <h3
      class="text-3xl md:text-5xl font-bold mb-12 tracking-tight text-center transform"
    >
      Meet your new <span class="text-secondary-pixelvpet">Friend</span>
    </h3>
  </div>

  <div
    class="border-4 border-secondary-pixelvpet/50 relative max-w-120 w-full h-120 overflow-hidden rounded-lg shadow-[0_0_25px_rgba(78,205,196,0.2)]"
    id="carousel-container"
  >
    {
        images.map((img, index) => (
        <Image
          src={img}
          alt={`VPet ${index + 1}`}
          class="absolute inset-0 w-full h-full object-cover transition-opacity duration-500 opacity-0"
          data-index={index}
        />
      ))
    }
  </div>

  <div class="flex space-x-4 mt-4">
    {
      images.map((_, index) => (
        <button
          class="w-4 h-4 transform cursor-pointer transition-all duration-300 bg-secondary-pixelvpet hover:rotate-45"
          data-dot-index={index}
        />
      ))
    }
  </div>

  <Idlers/>
</section>

<script>
  let currentIndex = 0;
  let interval;
  const images = document.querySelectorAll("[data-index]");
  const dots = document.querySelectorAll("[data-dot-index]");
  const carouselContainer = document.getElementById("carousel-container");

  function startCarousel() {
    interval = setInterval(() => {
      updateCarousel((currentIndex + 1) % images.length);
    }, 3000);
  }

  function stopCarousel() {
    clearInterval(interval);
  }

  function updateCarousel(index) {
    images.forEach((img, i) => {
      img.style.opacity = i === index ? "1" : "0";
    });
    dots.forEach((dot, i) => {
      dot.classList.toggle("!bg-primary-pixelvpet", i === index);
      dot.classList.toggle("rotate-[-45deg]", i === index);

      if (i === index) {
        dot.classList.remove("hover:rotate-45");
      } else {
        dot.classList.add("hover:rotate-45");
      }
    });
    currentIndex = index;
    stopCarousel();
    startCarousel();
  }

  dots.forEach((dot, index) => {
    dot.addEventListener("click", () => updateCarousel(index));
  });

  carouselContainer.addEventListener("mouseenter", stopCarousel);
  carouselContainer.addEventListener("mouseleave", startCarousel);

  startCarousel();
  updateCarousel(0);
</script>
